# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.

[tox]
envlist =
    clean,
    check,
#    docs,
#    mypy,
    {py38}-{nocov},
#    report
ignore_basepython_conflict = true

[gh-actions]
python =
    3.8: py38, mypy

[testenv]
wheel = true
basepython =
    py38: {env:TOXPYTHON:python3.8}
    {bootstrap,clean,check,report,codecov,coveralls,extension-coveralls}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/src:{toxinidir}/tests:
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop =
    cover: true
    nocov: false
deps =
    gmpy2 >= 2.1.0b4
    numpy
    hypothesis == 5.9.0
    jsons
    pytest
    typish
    cover: pytest-cov
commands =
    cover: python3 setup.py clean --all build_ext --force --inplace
    nocov: {posargs:pytest tests/test_encryption_compositor.py}
    cover: {posargs:pytest --cov --cov-report=term-missing -vv --ignore=src}

[testenv:check]
deps =
   docutils
   black
   pylint
   setuptools-scm
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    black -t py38 --check src tests bench setup.py
    pylint src tests bench setup.py

# [testenv:docs]
# usedevelop = true
# install_command =
#     python3 -m pip install --no-use-pep517 {opts} {packages}
# deps =
#     -r{toxinidir}/docs/requirements.txt
# commands =
#     sphinx-build {posargs:-E} -b doctest docs dist/docs
#     sphinx-build {posargs:-E} -b html docs dist/docs
#     sphinx-build -b linkcheck docs dist/docs

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls {env:COVERALLS_EXTRAS:--merge=extension-coveralls.json} []

[testenv:extension-coveralls]
deps =
    cpp-coveralls
skip_install = true
commands =
    coveralls --build-root=. --include=src --dump=extension-coveralls.json []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    codecov []

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

[testenv:mypy]
basepython = python3.8
deps =
    {[testenv]deps}
    mypy==0.760
setenv =
    MYPYPATH = {toxinidir}
ignore_errors = True
whitelist_externals =
    /bin/sh
mypy_paths =
    src/electionguard
    stubs
commands =
    mypy {posargs:{[testenv:mypy]mypy_paths}}

# Note: we're not running mypy on src/electionguardtest or tests, because Hypothesis
# and MyPy don't get along with each other properly. Some details at the link below:
# https://github.com/HypothesisWorks/hypothesis/issues/2365

# There seem to be other weird interactions between Hypothesis and MyPy that cause issues
# with test method return values. (You try to add -> None after a test definition, and
# that sometimes creates other errors, even though it's correct.)

# Suffice to say that manually running mypy with the tests directory will generate a
# long list of false positives, so it doesn't belong in our automated tests, but it's
# still useful to find real bugs hiding in those false positives.
